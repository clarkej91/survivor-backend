{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["socket","io","connect","transport","App","props","state","response","tribe1","tribe2","tribe3","none","jury","value","name","playerResponse","tribeRespone","tribe1Challenge","tribe2Challenge","tribe3Challenge","showResults","getData","bind","getPlayer","updateTribe","addLikeness","subtractLikeness","handleChange","diceRoll","diceRollTie","eventRoll","challengeRoll","addStrength","subtractStrength","addWit","subtractWit","this","axios","get","then","res","data","setState","on","console","log","player","put","catch","error","id","likeness","num","strength","wit","event","parseInt","split","tribe","preventDefault","target","smallestValue","lowestName","i","length","rollValue","Math","floor","random","push","tribeMember","playerArray","tribes","tribe1Roll","tribe2Roll","tribe3Roll","tribeArray","j","rollValueArray","type","checked","array","index","indexOf","splice","tribe1Array","map","onChange","handleInputChange","onSubmit","defaultValue","onClick","tribe2Array","tribe3Array","noneArray","juryArray","playerEvent","tribeEvent","className","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef77a540.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport io from \"socket.io-client\";\n\nconst URL = \"http://localhost:5000\";\nconst socket = io.connect(URL, { transport : ['websocket'] });\n\nclass App extends Component {\n  constructor( props ) {\n  super( props );\n    this.state = {\n      response: [],\n      tribe1: [],\n      tribe2: [],\n      tribe3: [],\n      none: [],\n      jury: [],\n      value: [],\n      name: \"\",\n      playerResponse: [],\n      tribeRespone: [],\n      tribe1Challenge: [],\n      tribe2Challenge: [],\n      tribe3Challenge: [],\n      showResults: false\n    };\n    this.getData = this.getData.bind(this)\n    this.getPlayer = this.getPlayer.bind(this)\n    this.updateTribe = this.updateTribe.bind(this)\n    this.addLikeness = this.addLikeness.bind(this)\n    this.subtractLikeness = this.subtractLikeness.bind(this)\n    this.handleChange = this.handleChange.bind(this);\n    this.diceRoll = this.diceRoll.bind(this);\n    this.diceRollTie = this.diceRollTie.bind(this);\n    this.eventRoll = this.eventRoll.bind(this);\n    this.challengeRoll = this.challengeRoll.bind(this);\n    this.addStrength = this.addStrength.bind(this);\n    this.subtractStrength = this.subtractStrength.bind(this);\n    this.addWit = this.addWit.bind(this);\n    this.subtractWit = this.subtractWit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n    // socket.on('FromAPI', data => {\n    //   console.log('fromapi',data);\n    // });\n  }\n\n  getData() {\n    axios.get('http://localhost:5000').then((res) => {\n      const response = res.data;\n      // console.log(response)\n      this.setState({response});\n      socket.on(\"FromAPI\", data => {\n        console.log('hello world')\n        const response = data;\n        console.log(response)\n        // this.setState({response});\n      });\n      // socket.on('FromAPI', data => {\n      //   const response = data;\n      //   console.log(response)\n      //   this.setState({response});\n      // });\n    });\n  }\n\n  getPlayer(player) {\n    axios.put('http://localhost:5000/getPlayer', {\n        name: player\n      })\n      .then(response => {\n        socket.on('FromgetPlayerAPI', data => {\n          const playerResponse = data;\n          this.setState({playerResponse});\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  addLikeness(id, likeness) {\n    let num = likeness + 1\n    axios.put('http://localhost:5000/updateCount', {\n        id: id,\n        likeness: num\n      })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    this.getData();\n  }\n\n  subtractLikeness(id, likeness) {\n    let num = likeness - 1\n    axios.put('http://localhost:5000/updateCount', {\n        id: id,\n        likeness: num\n      })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    this.getData();\n  }\n\n  addStrength(id, strength) {\n    let num = strength + 1\n    axios.put('http://localhost:5000/updateStrength', {\n        id: id,\n        strength: num\n      })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    this.getData();\n  }\n\n  subtractStrength(id, strength) {\n    let num = strength - 1\n    axios.put('http://localhost:5000/updateStrength', {\n        id: id,\n        strength: num\n      })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    this.getData();\n  }\n\n  addWit(id, wit) {\n    let num = wit + 1\n    axios.put('http://localhost:5000/updateWit', {\n        id: id,\n        wit: num\n      })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    this.getData();\n  }\n\n  subtractWit(id, wit) {\n    let num = wit - 1\n    axios.put('http://localhost:5000/updateWit', {\n        id: id,\n        wit: num\n      })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    this.getData();\n  }\n\n  updateTribe(event) {\n    axios.put('http://localhost:5000/updateTribe', {\n        id: [parseInt(this.state.value.split(',')[1])],\n        tribe: this.state.value.split(',')[0]\n      })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n      this.getData();\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  componentDidUpdate() {\n  console.log('Test updated');\n}\n\n  diceRoll(tribe){\n    let smallestValue = 0\n    let lowestName = []\n    for(let i = 0; i < tribe.length; i++){\n      let diceRoll = tribe[i].likeness * 9\n      let rollValue = Math.floor(Math.random() * diceRoll)\n      if(tribe[i] === tribe[0]){\n        smallestValue = rollValue\n        lowestName = [tribe[i]]\n      }\n      else if(smallestValue > rollValue) {\n        smallestValue = rollValue\n        lowestName = [tribe[i]]\n      }\n      else if(smallestValue === rollValue) {\n        smallestValue += rollValue\n        lowestName.push(tribe[i])\n      } else {\n\n      }\n      console.log(tribe[i].name, rollValue)\n    }\n    if(lowestName.length > 1){\n      this.diceRollTie(lowestName)\n    } else {\n      this.getPlayer(lowestName[0].name);\n    }\n  }\n\n  eventRoll(tribe) {\n    let tribeMember = tribe[Math.floor(Math.random() * tribe.length)];\n    this.getPlayer(tribeMember.name);\n    this.setState({ showResults: false });\n    // for(let i = 0; i < tribe.length; i ++){\n    //   let d7RollValue = Math.floor(Math.random() * 7)\n    // }\n  }\n\n  diceRollTie(lowestName) {\n    console.log(lowestName, 'time to draw rocks')\n    let playerArray = []\n    for(let i = 0; i < lowestName.length; i ++){\n      playerArray.push(lowestName[i].name)\n    }\n    this.setState({ showResults: true });\n    this.getPlayer(playerArray);\n  }\n\n  challengeRoll(tribe1, tribe2, tribe3) {\n    let tribes = [this.state.tribe1Challenge, this.state.tribe2Challenge, this.state.tribe3Challenge]\n    let tribe1Roll = 0\n    let tribe2Roll = 0\n    let tribe3Roll = 0\n    for(let i = 0; i < tribes.length; i ++){\n      if(tribes[i].length === 0){\n        continue;\n      }\n      let tribeArray = tribes[i]\n        for(let j = 0; j < tribeArray.length; j ++){\n          if(tribeArray[j].tribe === 'tribe1'){\n          let rollValue = Math.floor(Math.random() * tribeArray[j].strength + tribeArray[j].wit)\n          tribe1Roll = tribe1Roll + rollValue\n        } else if(tribeArray[j].tribe === 'tribe2'){\n          let rollValue = Math.floor(Math.random() * tribeArray[j].strength + tribeArray[j].wit)\n          tribe2Roll = tribe2Roll + rollValue\n        } else {\n          let rollValue = Math.floor(Math.random() * tribeArray[j].strength + tribeArray[j].wit)\n          tribe3Roll = tribe3Roll + rollValue\n        }\n      }\n    }\n    let rollValueArray = [tribe1Roll,tribe2Roll,tribe3Roll]\n    let smallestValue = 0\n    let lowestName = []\n    for(let i = 0; i < rollValueArray.length; i ++){\n      if(rollValueArray[i] === 0){\n        continue;\n      }\n      else if(rollValueArray[i] === rollValueArray[0]){\n        smallestValue = rollValueArray[i]\n        lowestName = [tribes[i]]\n      }\n      else if(smallestValue > rollValueArray[i]) {\n        smallestValue = rollValueArray[i]\n        lowestName = [tribes[i]]\n      }\n      else if(smallestValue === rollValueArray[i]) {\n        smallestValue += rollValueArray[i]\n        lowestName.push(tribes[i])\n      } else {\n\n      }\n    }\n    console.log(lowestName)\n    this.setState({ tribeRespone: [lowestName[0][0]] });\n    console.log(tribe1Roll, tribe2Roll, tribe3Roll)\n  }\n\n  handleInputChange(data, event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    console.log(value);\n    if(data.tribe === 'tribe1'){\n      if(value === true){\n        this.setState({ tribe1Challenge: [...this.state.tribe1Challenge, data] }, () => {\n        })\n      } else {\n        let array = [...this.state.tribe1Challenge]\n        let index = array.indexOf(data)\n        if (index !== -1) {\n          array.splice(index, 1);\n          this.setState({tribe1Challenge: array});\n        }\n      }\n    } else if (data.tribe === 'tribe2'){\n      if(value === true){\n        this.setState({ tribe2Challenge: [...this.state.tribe2Challenge, data] }, () => {\n        })\n      } else {\n        let array = [...this.state.tribe2Challenge]\n        let index = array.indexOf(data)\n        if (index !== -1) {\n          array.splice(index, 1);\n          this.setState({tribe2Challenge: array});\n        }\n      }\n    } else {\n      if(value === true){\n        this.setState({ tribe3Challenge: [...this.state.tribe3Challenge, data] }, () => {\n        })\n      } else {\n        let array = [...this.state.tribe3Challenge]\n        let index = array.indexOf(data)\n        if (index !== -1) {\n          array.splice(index, 1);\n          this.setState({tribe3Challenge: array});\n        }\n      }\n    }\n  }\n\n  render() {\n    let tribe1 = []\n    let tribe2 = []\n    let tribe3 = []\n    let none = []\n    let jury = []\n\n    const tribeSort = this.state.response.map((data, i) => {\n        if(data.tribe === 'jury'){\n          jury.push(data)\n        }\n        else if(data.tribe === \"tribe1\"){\n          tribe1.push(data)\n        }\n        else if(data.tribe === \"tribe2\"){\n          tribe2.push(data)\n        }\n        else if(data.tribe === \"tribe3\"){\n          tribe3.push(data)\n        }\n        else {\n          none.push(data)\n        }\n    })\n    const tribe1Array = tribe1.map((data, i) => {\n      let tribe1Selected = []\n      return(\n        <tr key={data.id}>\n          <td>\n          <input\n            name=\"isGoing\"\n            type=\"checkbox\"\n            onChange={ (event) => {this.handleInputChange(data, event)}}\n             />\n          </td>\n          <td>{data.name}</td>\n          <td>\n          <form onSubmit={this.updateTribe}>\n          <select\n            defaultValue={[data.tribe, data.id]} onChange={this.handleChange}>\n          <option value={['tribe1', data.id]}>Tribe1</option>\n          <option value={['tribe2', data.id]}>Tribe2</option>\n          <option value={['tribe3', data.id]}>Tribe3</option>\n          <option value={['none', data.id]}>Voted out</option>\n          <option value={['jury', data.id]}>Jury</option>\n          </select>\n          <input type=\"submit\" value=\"Submit\" />\n          </form>\n          </td>\n          <td>{data.likeness}\n          <div>\n            <button onClick={() => this.addLikeness(data.id, data.likeness)}>+</button>\n            <button onClick={() => this.subtractLikeness(data.id, data.likeness)}>-</button>\n          </div>\n          </td>\n          <td>{data.strength}\n          <div>\n            <button onClick={() => this.addStrength(data.id, data.strength)}>+</button>\n            <button onClick={() => this.subtractStrength(data.id, data.strength)}>-</button>\n          </div>\n          </td>\n          <td>{data.wit}\n          <div>\n            <button onClick={() => this.addWit(data.id, data.wit)}>+</button>\n            <button onClick={() => this.subtractWit(data.id, data.wit)}>-</button>\n          </div>\n          </td>\n        </tr>\n      )\n    })\n    const tribe2Array = tribe2.map((data, i) => {\n      return(\n        <tr key={data.id}>\n          <td>\n          <input\n            name=\"isGoing\"\n            type=\"checkbox\"\n            onChange={ (event) => {this.handleInputChange(data, event)}}\n             />\n          </td>\n          <td>{data.name}</td>\n          <td>\n          <form onSubmit={this.updateTribe}>\n          <select\n            defaultValue={[data.tribe, data.id]} onChange={this.handleChange}>\n          <option value={['tribe1', data.id]}>Tribe1</option>\n          <option value={['tribe2', data.id]}>Tribe2</option>\n          <option value={['tribe3', data.id]}>Tribe3</option>\n          <option value={['none', data.id]}>Voted out</option>\n          <option value={['jury', data.id]}>Jury</option>\n          </select>\n          <input type=\"submit\" value=\"Submit\" />\n          </form>\n          </td>\n          <td>{data.likeness}\n          <div>\n            <button onClick={() => this.addLikeness(data.id, data.likeness)}>+</button>\n            <button onClick={() => this.subtractLikeness(data.id, data.likeness)}>-</button>\n          </div>\n          </td>\n          <td>{data.strength}\n          <div>\n            <button onClick={() => this.addStrength(data.id, data.strength)}>+</button>\n            <button onClick={() => this.subtractStrength(data.id, data.strength)}>-</button>\n          </div>\n          </td>\n          <td>{data.wit}\n          <div>\n            <button onClick={() => this.addWit(data.id, data.wit)}>+</button>\n            <button onClick={() => this.subtractWit(data.id, data.wit)}>-</button>\n          </div>\n          </td>\n        </tr>\n      )\n    })\n    const tribe3Array = tribe3.map((data, i) => {\n      return(\n        <tr key={data.id}>\n          <td>\n          <input\n            name=\"isGoing\"\n            type=\"checkbox\"\n            onChange={ (event) => {this.handleInputChange(data, event)}}\n             />\n          </td>\n          <td>{data.name}</td>\n          <td>\n          <form onSubmit={this.updateTribe}>\n          <select\n            defaultValue={[data.tribe, data.id]} onChange={this.handleChange}>\n          <option value={['tribe1', data.id]}>Tribe1</option>\n          <option value={['tribe2', data.id]}>Tribe2</option>\n          <option value={['tribe3', data.id]}>Tribe3</option>\n          <option value={['none', data.id]}>Voted out</option>\n          <option value={['jury', data.id]}>Jury</option>\n          </select>\n          <input type=\"submit\" value=\"Submit\" />\n          </form>\n          </td>\n          <td>{data.likeness}\n            <div>\n              <button onClick={() => this.addLikeness(data.id, data.likeness)}>+</button>\n              <button onClick={() => this.subtractLikeness(data.id, data.likeness)}>-</button>\n            </div>\n          </td>\n          <td>{data.strength}\n          <div>\n            <button onClick={() => this.addStrength(data.id, data.strength)}>+</button>\n            <button onClick={() => this.subtractStrength(data.id, data.strength)}>-</button>\n          </div>\n          </td>\n          <td>{data.wit}\n          <div>\n            <button onClick={() => this.addWit(data.id, data.wit)}>+</button>\n            <button onClick={() => this.subtractWit(data.id, data.wit)}>-</button>\n          </div>\n          </td>\n        </tr>\n      )\n    })\n    const noneArray = none.map((data, i) => {\n      return(\n        <tr key={data.id}>\n        <td>\n        <input\n          name=\"isGoing\"\n          type=\"checkbox\"\n          onChange={ (event) => {this.handleInputChange(data, event)}}\n           />\n        </td>\n          <td>{data.name}</td>\n          <td>\n          <form onSubmit={this.updateTribe}>\n          <select\n            defaultValue={[data.tribe, data.id]} onChange={this.handleChange}>\n          <option value={['tribe1', data.id]}>Tribe1</option>\n          <option value={['tribe2', data.id]}>Tribe2</option>\n          <option value={['tribe3', data.id]}>Tribe3</option>\n          <option value={['none', data.id]}>Voted out</option>\n          <option value={['jury', data.id]}>Jury</option>\n          </select>\n          <input type=\"submit\" value=\"Submit\" />\n          </form>\n          </td>\n          <td>{data.likeness}\n          <div>\n            <button onClick={() => this.addLikeness(data.id, data.likeness)}>+</button>\n            <button onClick={() => this.subtractLikeness(data.id, data.likeness)}>-</button>\n          </div>\n          </td>\n          <td>{data.strength}\n          <div>\n            <button onClick={() => this.addStrength(data.id, data.strength)}>+</button>\n            <button onClick={() => this.subtractStrength(data.id, data.strength)}>-</button>\n          </div>\n          </td>\n          <td>{data.wit}\n          <div>\n            <button onClick={() => this.addWit(data.id, data.wit)}>+</button>\n            <button onClick={() => this.subtractWit(data.id, data.wit)}>-</button>\n          </div>\n          </td>\n        </tr>\n      )\n    })\n    const juryArray = jury.map((data, i) => {\n      return(\n        <tr key={data.id}>\n          <td>{data.name}</td>\n          <td>\n          <form onSubmit={this.updateTribe}>\n          <select\n            defaultValue={[data.tribe, data.id]} onChange={this.handleChange}>\n          <option value={['tribe1', data.id]}>Tribe1</option>\n          <option value={['tribe2', data.id]}>Tribe2</option>\n          <option value={['tribe3', data.id]}>Tribe3</option>\n          <option value={['none', data.id]}>Voted out</option>\n          <option value={['jury', data.id]}>Jury</option>\n          </select>\n          <input type=\"submit\" value=\"Submit\" />\n          </form>\n          </td>\n          <td>{data.likeness}</td>\n          <div>\n            <button onClick={() => this.addLikeness(data.id, data.likeness)}>+</button>\n            <button onClick={() => this.subtractLikeness(data.id, data.likeness)}>-</button>\n          </div>\n        </tr>\n      )\n    })\n    const playerEvent = this.state.playerResponse.map((data, i) => {\n      console.log(data.name)\n      return(\n        <div key={data.id}>\n        {data.name}\n        </div>\n      )\n    })\n    const tribeEvent = this.state.tribeRespone.map((data, i) => {\n      return(\n        <div key={data.id}>\n        {data.tribe}\n        </div>\n      )\n    })\n    return (\n      <div className=\"App\">\n      <h2>\n      Event Happeneds to: {playerEvent}{tribeEvent}\n      { this.state.showResults ? <div>\n        <button onClick={() => this.eventRoll(this.state.playerResponse)}>Draw Rocks</button>\n      </div> : null }\n      </h2>\n          <button onClick={() => this.challengeRoll(tribe1, tribe2, tribe3)}>Challenge Roll</button>\n        <h2>Tribe 1</h2>\n        <table>\n          <thead>\n          <tr>\n            <th>\n            []\n            </th>\n            <th>\n            Name\n            </th>\n            <th>\n            Tribe\n            </th>\n            <th>\n            Likeness\n            </th>\n            <th>\n            Strength\n            </th>\n            <th>\n            Wit\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          {tribe1Array}\n          </tbody>\n        </table>\n        <div>\n          <button onClick={() => this.diceRoll(tribe1)}>Tribal Roll</button>\n          <button onClick={() => this.eventRoll(tribe1)}>Event Roll</button>\n        </div>\n        <h2>Tribe 2</h2>\n        <table>\n          <thead>\n          <tr>\n            <th>\n            []\n            </th>\n            <th>\n            Name\n            </th>\n            <th>\n            Tribe\n            </th>\n            <th>\n            Likeness\n            </th>\n            <th>\n            Strength\n            </th>\n            <th>\n            Wit\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          {tribe2Array}\n          </tbody>\n        </table>\n        <div>\n          <button onClick={() => this.diceRoll(tribe2)}>Tribal Roll</button>\n          <button onClick={() => this.eventRoll(tribe2)}>Event Roll</button>\n        </div>\n        <h2>Tribe 3</h2>\n        <table>\n          <thead>\n          <tr>\n            <th>\n            []\n            </th>\n            <th>\n            Name\n            </th>\n            <th>\n            Tribe\n            </th>\n            <th>\n            Likeness\n            </th>\n            <th>\n            Strength\n            </th>\n            <th>\n            Wit\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          {tribe3Array}\n          </tbody>\n        </table>\n        <div>\n          <button onClick={() => this.diceRoll(tribe3)}>Tribal Roll</button>\n          <button onClick={() => this.eventRoll(tribe3)}>Event Roll</button>\n        </div>\n        <h2>Voted out</h2>\n        <table>\n          <thead>\n          <tr>\n            <th>\n            []\n            </th>\n            <th>\n            Name\n            </th>\n            <th>\n            Tribe\n            </th>\n            <th>\n            Likeness\n            </th>\n            <th>\n            Strength\n            </th>\n            <th>\n            Wit\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          {noneArray}\n          </tbody>\n        </table>\n        <div>\n          <button onClick={() => this.diceRoll(none)}>Tribal Roll</button>\n          <button onClick={() => this.eventRoll(none)}>Event Roll</button>\n        </div>\n        <h2>Jury</h2>\n        <table>\n          <thead>\n          <tr>\n            <th>\n            Name\n            </th>\n            <th>\n            Tribe\n            </th>\n            <th>\n            Likeness\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          {juryArray}\n          </tbody>\n        </table>\n        <div>\n          <button onClick={() => this.diceRoll(jury)}>Tribal Roll</button>\n          <button onClick={() => this.eventRoll(jury)}>Event Roll</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}